
-------------
LeetCode #704
-------------


Standard binary search:

class Solution:
    def search(self, nums: List[int], target: int) -> int:
        left = 0
        right = len(nums) - 1
        while right >= left:  # > wouldn't work if the target is at either end of the array. 
            mid = (left + right) // 2
            if target == nums[mid]:
                return mid
            elif target > nums[mid]:  # Only works because of sorted array.
                left = mid + 1
            else:
                right = mid - 1
        return -1


At most log(n) floor divisions by 2, thus O(log(n) time. No data structures created, thus O(1) space.

